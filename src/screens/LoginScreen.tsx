import React, { useState } from "react";
import {
  View,
  Text,
  TextInput,
  TouchableOpacity,
  Button,
  StyleSheet,
  Alert,
} from "react-native";
import AsyncStorage from "@react-native-async-storage/async-storage";
import { signInWithEmailAndPassword } from "firebase/auth";
import { auth } from "../services/firebaseConfig";
import { useNavigation, useRoute } from "@react-navigation/native";

const LoginScreen = ({ navigation }) => {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [loading, setLoading] = useState(false);
  const route = useRoute();

  const handleLogin = async () => {
    if (!email.trim() || !password.trim()) {
      Alert.alert("L·ªói", "Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin!");
      return;
    }

    setLoading(true);
    try {
      const userCredential = await signInWithEmailAndPassword(
        auth,
        email,
        password
      );
      const user = userCredential.user;

      await AsyncStorage.setItem(
        "user",
        JSON.stringify({ uid: user.uid, email: user.email })
      );

      const redirectTo = route.params?.redirectTo || "MainTabs";

      // üß≠ ƒêi·ªÅu h∆∞·ªõng linh ho·∫°t
      if (redirectTo === "Cart" || redirectTo === "Account") {
        navigation.navigate("MainTabs", { screen: redirectTo });
      } else if (redirectTo === "MainTabs") {
        navigation.navigate("MainTabs");
      } else {
        navigation.navigate(redirectTo);
      }

      Alert.alert("‚úÖ Th√†nh c√¥ng", "ƒêƒÉng nh·∫≠p th√†nh c√¥ng!");
    } catch (error: any) {
      console.error("‚ùå L·ªói ƒëƒÉng nh·∫≠p:", error.message);
      Alert.alert("ƒêƒÉng nh·∫≠p th·∫•t b·∫°i", "Sai Gmail ho·∫∑c m·∫≠t kh·∫©u!");
    } finally {
      setLoading(false);
    }
  };

  const handleBackHome = async () => {
    await AsyncStorage.removeItem("user");
    navigation.navigate("MainTabs");
  };

  return (
    <View style={styles.container}>
      <TouchableOpacity style={styles.backButton} onPress={handleBackHome}>
        <Text style={styles.backText}>‚¨Ö Quay l·∫°i Trang ch·ªß</Text>
      </TouchableOpacity>

      <Text style={styles.title}>ƒêƒÉng nh·∫≠p</Text>

      <TextInput
        style={styles.input}
        placeholder="Nh·∫≠p Gmail"
        value={email}
        onChangeText={setEmail}
        keyboardType="email-address"
        autoCapitalize="none"
      />

      <TextInput
        style={styles.input}
        placeholder="Nh·∫≠p m·∫≠t kh·∫©u"
        value={password}
        onChangeText={setPassword}
        secureTextEntry
      />

      <TouchableOpacity onPress={() => alert("T√≠nh nƒÉng ƒëang ph√°t tri·ªÉn!")}>
        <Text style={styles.forgotText}>Qu√™n m·∫≠t kh·∫©u?</Text>
      </TouchableOpacity>

      <View style={{ width: "80%", marginTop: 10 }}>
        <Button
          title={loading ? "ƒêang ƒëƒÉng nh·∫≠p..." : "ƒêƒÉng nh·∫≠p"}
          onPress={handleLogin}
          color="#924900"
          disabled={loading}
        />
      </View>

      <View style={styles.footer}>
        <Text>B·∫°n ch∆∞a c√≥ t√†i kho·∫£n? </Text>
        <TouchableOpacity onPress={() => navigation.navigate("SignUp")}>
          <Text style={styles.signupText}>ƒêƒÉng k√Ω</Text>
        </TouchableOpacity>
      </View>
    </View>
  );
};

export default LoginScreen;

const styles = StyleSheet.create({
  container: { flex: 1, justifyContent: "center", alignItems: "center" },
  title: {
    fontSize: 26,
    fontWeight: "bold",
    marginBottom: 30,
    color: "#924900",
  },
  input: {
    width: "80%",
    borderWidth: 1,
    borderColor: "#ccc",
    borderRadius: 10,
    padding: 12,
    marginBottom: 15,
    fontSize: 16,
  },
  forgotText: {
    alignSelf: "flex-end",
    marginRight: "10%",
    fontSize: 14,
    color: "#924900",
    marginBottom: 10,
  },
  footer: {
    flexDirection: "row",
    marginTop: 20,
    alignItems: "center",
  },
  signupText: {
    color: "#924900",
    fontWeight: "bold",
  },
  backButton: {
    position: "absolute",
    top: 50,
    left: 20,
  },
  backText: {
    fontSize: 16,
    color: "#924900",
    fontWeight: "500",
  },
});
